import React from 'react';
import { NavBar, List,Toast } from 'antd-mobile';
import { connect } from 'react-redux'
import axios from 'axios'

const Item = List.Item;
const Brief = Item.Brief;
class Goodslist extends React.Component {
    state={
        goodsListMenu:[]
    }
    async componentWillMount() {
        this.props.dispatch({ type: 'tabbar', show: true })
        let { id } = this.props.match.params
        id = id.substring(0, id.length - 1)
        let itemcodes;
        switch(id){
            case'鲜花': itemcodes
            break;
            case'永生花': itemcodes='1073256,1073186,1073287,1073033,1073094,1073155,1073100,1073263,1073173,1073244,1073187,1073093,1073157,1073255,1073210,1073166,1073151,1073145,1073159,1073137,1073156,1073266,1070064,1073120,1073206,1073251,1073252,1073185,1073146,1073253,1073274,1073092,1073140,1073239,1073197,1073199,1073200,1073172,1073213,1073111,1073038,1073240,1073243,1073275,1073212,1073242,1073176,1073231,1073184,1073110,1073164,1073136,1073032,1073109,1073158,1073241,1073147,1073121,1073108,1073135,1073017,1073191,1073190,1073232,1070063,1073034,1073288,1073139,1073237,1073204,1073270,1073279,1073265,1073168,1073057,1073272,1073283,1073282,1073068,1073014,1073153,1073160,1073118,1073114,1073265,1073168,1073057,1073272,1073283,1073282,1073068,1073014,1073153,1073160,1073118,1073114'
            break;
            case'蛋糕': itemcodes
            break;
            case'礼品': itemcodes
            break;
            case'其他': itemcodes='9020012,7010006,9020011,7010009,7010002,9020015,9020014,7010008,7010001,7010004,7010012,7010011,9020010,7010007,7010005,7010003'
            break;
            default:
                itemcodes=this.state.goodsListMenu;break;
        }
        const {data} = await axios.post('http://120.24.63.27:2001/api/goods/list',{itemcodes})
        this.setState({
            goodsListMenu:data.data
        })
        
    }
    gotodetails=(id)=>{
        this.props.history.push('/goods/goodsdetails/'+id)
    }
    componentDidMount(){
        Toast.loading('Loading...', 1);

          setTimeout(() => {
            Toast.hide();
          }, 10000);
    }
    componentWillUnmount() {
        this.props.dispatch({ type: 'tabbar', show: false })
    }

    render() {
        let { id } = this.props.match.params
        id = id.substring(0, id.length - 1)
        return (
            <>
                <NavBar
                    mode="light"
                    icon={<i className='iconfont icon-arrow-left' style={{ color: '#333', fontSize: '20px' }}></i>}
                    onLeftClick={() => {
                        return this.props.history.push('/goods')
                    }}
                    style={{ fontSize: '12px' }}
                >{id}</NavBar>

                 <List renderHeader={() => <img src='https://img02.hua.com/slider/18_youflower_m.jpg' alt='' style={{width:'100%'}}/>} className="my-list">   
                {
                    this.state.goodsListMenu.map(item=> 
                    <Item  align="top" thumb={'http://120.24.63.27:2005/img/'+item.ItemCode+'.jpg_220x240.jpg'} multipleLine onClick={this.gotodetails.bind(null,item.ItemCode)}>
                    {item.Instro} <Brief style={{color:'#f25555',fontSize:'12px'}}>到手<span style={{color:'#f25555',fontWeight:'bold',fontSize:'18px'}}>￥{item.Price}</span></Brief>
                    </Item>)
                }
                </List>
                
            </>
        )
    }

}
const mapStateToProps = function (state) {
    return {
        hidden: state.hidden,
    }
}
Goodslist = connect(mapStateToProps)(Goodslist)
export default Goodslist